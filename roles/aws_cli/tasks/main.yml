---
- name: Fix Docker repository GPG key issues (Debian/Ubuntu)
  block:
    - name: Remove old Docker keyring if exists
      file:
        path: /etc/apt/trusted.gpg.d/docker.gpg
        state: absent
      become: yes

    - name: Add Docker official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      become: yes

    - name: Ensure APT keyring directory exists
      file:
        path: /usr/share/keyrings
        state: directory
        mode: '0755'
      become: yes

    - name: Add Docker key to modern keyring
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/share/keyrings/docker-archive-keyring.gpg
        mode: '0644'
      become: yes

    - name: Update Docker repository
      apt_repository:
        repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        update_cache: yes
      become: yes
  when: ansible_os_family == "Debian"

- name: Install prerequisites (Debian/Ubuntu)
  apt:
    name:
      - unzip
      - python3
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
  become: yes
  register: apt_install
  retries: 3
  delay: 5
  until: apt_install is success

- name: Install prerequisites (RedHat/CentOS)
  yum:
    name:
      - unzip
      - python3
    state: present
  when: ansible_os_family == "RedHat"
  become: yes

- name: Check if AWS CLI is already installed
  stat:
    path: "{{ aws_install_path }}/v2/current/bin/aws"
  register: aws_cli_installed

- name: Create temporary directory for download
  tempfile:
    state: directory
    suffix: awscli
  register: temp_dir
  when: not aws_cli_installed.stat.exists

- name: Download AWS CLI v2
  get_url:
    url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-{{ aws_cli_version }}.zip"
    dest: "{{ temp_dir.path }}/awscli.zip"
  when: not aws_cli_installed.stat.exists

- name: Unzip AWS CLI package
  unarchive:
    src: "{{ temp_dir.path }}/awscli.zip"
    dest: "{{ temp_dir.path }}"
    remote_src: yes
  when: not aws_cli_installed.stat.exists

- name: Install AWS CLI
  command: "{{ temp_dir.path }}/aws/install -i {{ aws_install_path }} -b /usr/local/bin"
  args:
    creates: "{{ aws_install_path }}/v2/current/bin/aws"
  become: yes
  when: not aws_cli_installed.stat.exists

- name: Clean up temporary directory
  file:
    path: "{{ temp_dir.path }}"
    state: absent
  when: not aws_cli_installed.stat.exists

- name: Ensure AWS config directory exists
  file:
    path: "/root/.aws"
    state: directory
    mode: '0700'
  become: yes

- name: Configure AWS CLI
  template:
    src: aws_config.j2
    dest: "/root/.aws/config"
    mode: '0600'
  become: yes

- name: Verify AWS CLI installation
  command: aws --version
  register: aws_version_output
  changed_when: false

- name: Display AWS CLI version
  debug:
    msg: "{{ aws_version_output.stdout }}"