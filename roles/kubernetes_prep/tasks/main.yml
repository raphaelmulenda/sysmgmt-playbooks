---
- name: Update apt package index
  apt:
    update_cache: yes

- name: Disable all swaps
  shell: swapoff -a

- name: Disable swap in /etc/fstab
  lineinfile:
    dest: /etc/fstab
    regexp: '^(\s*)([^#].*?swap.*?)$'
    line: '#\1\2'
    backrefs: yes
  register: fstab_swap

- name: Verify fstab changes
  command: mount -a
  when: fstab_swap.changed

- name: Check system memory
  command: free -h

- name: Enable kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - overlay
    - br_netfilter

- name: Add settings to sysctl
  copy:
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
    dest: /etc/sysctl.d/kubernetes.conf
  notify: Reload sysctl

- name: Configure modules to load at boot
  copy:
    content: |
      overlay
      br_netfilter
    dest: /etc/modules-load.d/k8s.conf

- name: Install required packages
  apt:
    name:
      - curl
      - gnupg2
      - software-properties-common
      - apt-transport-https
      - ca-certificates
    state: present

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
    state: present

- name: Install containerd
  apt:
    update_cache: yes
    name: containerd.io
    state: present

- name: Configure containerd
  shell: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml

- name: Enable systemd cgroup driver for containerd
  lineinfile:
    path: /etc/containerd/config.toml
    regexp: '^(\s*)SystemdCgroup'
    line: '\1SystemdCgroup = true'
  notify: Restart containerd

- name: Install Kubernetes dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gpg
    state: present

- name: Set Kubernetes version
  set_fact:
    kubernetes_version: "1.31"

- name: Import Kubernetes GPG key
  apt_key:
    url: "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_version }}/deb/Release.key"
    state: present

- name: Install Kubernetes components
  apt:
    update_cache: yes
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Hold Kubernetes packages
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Verify kubectl installation
  command: kubectl version --client && kubeadm version

- name: Update hosts file
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'