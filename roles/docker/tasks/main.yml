---
- name: Remove apt lock files if they exist
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /var/lib/apt/lists/lock
    - /var/cache/apt/archives/lock
  become: true
  register: remove_lock_files_result
- debug:
    msg: "Removed lock files: {{ remove_lock_files_result.results | map(attribute='changed') | list }}"

- name: Update system packages
  apt:
    update_cache: yes
    upgrade: dist
  when: ansible_os_family == 'Debian'
  register: update_packages_result
- debug:
    msg: "System packages updated: {{ update_packages_result.changed }}"

- name: Install Docker dependencies
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common']
    state: present
  register: install_deps_result
- debug:
    msg: "Docker dependencies installed: {{ install_deps_result.changed }}"

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  register: add_gpg_key_result
- debug:
    msg: "Docker GPG key added: {{ add_gpg_key_result.changed }}"

- name: Add Docker repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present
  register: add_repo_result
- debug:
    msg: "Docker repository added: {{ add_repo_result.changed }}"

- name: Install Docker
  apt:
    name: ['docker-ce', 'docker-ce-cli', 'containerd.io']
    state: present
  register: install_docker_result
- debug:
    msg: "Docker installed: {{ install_docker_result.changed }}"

- name: Ensure Docker is started and enabled
  systemd:
    name: docker
    state: started
    enabled: yes
  register: start_docker_result
- debug:
    msg: "Docker service started and enabled: {{ start_docker_result.changed }}"

- name: Validate Docker installation
  command: docker --version
  register: docker_version
  changed_when: false
- debug:
    msg: "Docker version: {{ docker_version.stdout }}"

- name: Add users to docker group
  user:
    name: "{{ item }}"
    groups: docker
    append: yes
  loop: "{{ docker_users }}"
  become: true
  register: add_user_to_group_result
- debug:
    msg: "Users added to docker group: {{ add_user_to_group_result.results | map(attribute='changed') | list }}"

- name: Ensure Docker socket has correct permissions
  file:
    path: /var/run/docker.sock
    owner: root
    group: docker
    mode: '0660'
  become: true
  register: docker_socket_permissions
- debug:
    msg: "Docker socket permissions updated: {{ docker_socket_permissions.changed }}"

- name: Install Docker Compose
  get_url:
    url: "https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64"
    dest: /usr/local/bin/docker-compose
    mode: '0755'  # Set execute permissions for all users
  register: install_docker_compose_result
- debug:
    msg: "Docker Compose installed: {{ install_docker_compose_result }}"

- name: Validate Docker Compose installation
  command: docker-compose --version
  register: docker_compose_version
  changed_when: false
- debug:
    msg: "Docker Compose version: {{ docker_compose_version.stdout }}"